name: Deploy to Cloud Run

on:
  push:
    branches:
      - feat/30

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: GitHub Repo 불러오기
        uses: actions/checkout@v4

      - name: JDK 17 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: application.yml 생성
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: Gradle 권한 부여 및 빌드
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: GCP 인증 (서비스 계정 키)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: gcloud SDK 설정
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Docker를 위한 gcloud 인증 설정
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Docker 이미지 생성 및 태그 설정
        run: docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-image/backend:latest .

      - name: Docker 이미지 푸시
        run: docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-image/backend:latest

      - name: Cloud Run 배포
        run: |
          gcloud run deploy spring-app \
            --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-image/backend:latest \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --quiet
          
        


