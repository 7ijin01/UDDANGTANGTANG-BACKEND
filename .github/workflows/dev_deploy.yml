name: CI/CD Pipeline
on:
  push:
    branches: [develop]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      # ❶ gradlew 에 실행권한 부여 (다시 추가!)
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Make application.yml
        run: |
          mkdir -p src/main/resources
          printf '%s\n' "${{ secrets.APPLICATION_YML }}" > src/main/resources/application.yml

      # ❷ (선택) 캐시 키 프리픽스를 짧게 지정해 422 경고 제거
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build --no-daemon
          cache-key-prefix: gradle  # ← 경고 방지용

      - name: Deploy to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "$EC2_SSH_KEY" > key.pem && chmod 600 key.pem
          jar_file=$(find build/libs -name '*SNAPSHOT.jar' ! -name '*plain.jar' | head -n1)
          scp -i key.pem -o StrictHostKeyChecking=no "$jar_file" $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/uddangtangtang-server.jar
          ssh -i key.pem -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST \
            "pkill -f 'uddangtangtang-server.jar' || true && \
             nohup java -jar /home/$EC2_USERNAME/uddangtangtang-server.jar > app.log 2>&1 &"
          rm -f key.pem
