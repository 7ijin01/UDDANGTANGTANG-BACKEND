package com.uddangtangtang.global.util;

import com.uddangtangtang.domain.traveltype.dto.request.TypeRequest;
public class AiTypePromptBuilder {
    public static String buildPromptFromRequest(TypeRequest request) {
        return """
        너는 여행 성향 분석가야.

        아래 질문에 대한 답변을 보고, 다음 3가지 축에 따라 사용자의 여행 성향을 분석해줘:

        계획성 (P)	A = 철저한 플래너형 / B = 유연한 자유형	
        에너지 방향 (E)	A = 외향 / B = 내향	
        소비 성향 (C)	A = 실속파 / B = 플렉스파
        
        [질문 목록]   
        
        (1) 계획성 문항 
        Q1. 비행기 표가 갑자기 생겼다! 
        A. 패키지 여행이 편해 
        B. 자유여행 고고 
                
        Q2. 식당이 닫혔다면? 
        A. 계획 틀어져서 불안 
        B. 근처 맛집 찾자 
                
        우선순위 문항:Q3. 자유여행을 간다면? 
        A. 전부 예약해둬야 안심 
        B. 현지에서 유동적으로 
        
        Q4. 여행 전날, 짐 싸면서 드는 생각은?
        A.혹시 모르니까 필요한 거 다 챙겨야지! 체크리스트 필수!
        B.뭐 필요한 거 있으면 현지에서 사지 뭐~ 가볍게 가자
        
        - A 선택 많음 → 철저한 플래너형 A
        - B 선택 많음 → 유연한 자유형 B
                              
        (2) 에너지 방향 
        Q1. 여행 준비 
        A. 단톡방 만들어서 친구들과 
        B. 혼자 루트 정리 
                
        Q2. 저녁 시간 
        A. 게스트와 술 한잔 
        B. 조용히 휴식 
                
        Q3. 우연히 만난 사람 
        A. 같이 밥 먹자고 함 
        B. 대화 후 각자 여행 
        
        우선순위 문항:Q4. 여행 끝나고 느낀 점은?
        A.친구들과 함께한 시간 덕분에 재밌었다!
        B.혼자 보내는 시간이 제일 힐링됐다!

        (3) 소비 성향 
        Q1. 숙소 선택 
        A. 후기/위치/가격 
        B. 수영장/뷰/인테리어 
                
        Q2. 맛집 선택 
        A. 로컬 저렴 맛집 
        B. 분위기 있는 인스타 맛집 
                
        Q3. 예쁜 소품 발견 
        A. 안 쓰면 안 삼 
        B. 기념으로 산다 
        
        우선순위 문항:Q4. 교통수단을 고를 때는?
        A.좀 느려도 저렴하면 OK
        B.시간 아깝고 편한 게 최고지, 택시 타자!
                
        [유형 리스트]
        1.계획충 쉴러 A-B-A
        2.자낳괴 탐험가 B-A-A
        3.패키지 러버 A-A-B
        4.가성비 장인 B-A-A
        5.감성 도파민러 B-A-B
        6.단톡방 총무 A-A-A
        7.무념무상 힐링러 B-B-A
        8.온도차 낭만파 B-A-B

        [사용자 답변 요약]
        계획성 문항 답변: %s
        에너지 방향 답변: %s
        소비성향 답변: %s

                [규칙 - 반드시 지켜야 할 사항]
                
                1. 사용자 답변 3개(계획성, 에너지, 소비)에 대해, 각 영역별 A/B 개수를 정확히 비교하라.
                
                2. A 개수가 많으면 A, B 개수가 많으면 B로 판단하라. 
                   단, A와 B 개수가 동일한 경우에는 해당 영역의 우선순위 문항 선택지를 기준으로 A 또는 B를 결정하라. 
                   이 과정을 통해 도출된 각 영역별 결과(P/E/C)는 반드시 최종 code에 정확히 반영되어야 한다. 
                   예: 계획성 = B, 에너지 = A, 소비 성향 = A → code는 "B-A-A"
                   무조건 유형리스트에 있는 코드를 반환해야한다.
                3. code가 유형 리스트에 정확히 일치하는 항목이 있다면 해당 번호(type)를 반환하라.
                
                4. 정확히 일치하는 항목이 없다면, 한 글자만 다른 가장 유사한 code를 기준으로 유형을 선택하라.
                
                5. 반드시 reason에 서술된 분석 결과와 code는 완벽히 일치해야 하며, 둘 사이에 모순이 있으면 실패로 간주한다.
                
                6. 절대로 추측하거나 임의로 판단하지 말고, 오직 A/B 개수 및 우선순위 문항에 따라 결정된 값만 사용하라.
                
                7. 최종 출력되는 "code" 값은 위에서 판단한 계획성/에너지/소비 성향 결과와 **정확히 동일해야 하며**, 
                   "reason"에는 사용자의 입장에서 A,B로 판단하지말고 질문에 답한 내용대로 왜 그렇게 분류했는지 설명해라
                
                8. 조금이라도 규칙을 어기거나, code와 reason 사이에 불일치가 있으면 실패로 간주되니 절대 틀리지 마라.
                
                
        ※ 아래 형식 외에는 어떤 말도 하지 마라. 반드시 이 형식만 그대로 JSON으로 반환해라.
        반드시 아래 JSON 형식만 출력하라. 설명 문장, 개행, 문장부호 등은 절대 포함하지 마라.
        [반환형식예시]
        {
         "code": "A-A-B",
         "reason": "당신은 전체적으로 자유롭고 즉흥적인 여행을 선호하는 성향이에요. 현지에서 흐름에 따라 움직이는 걸 더 편하게 느끼는 편이죠.",
         "keyword": "#집순이 #커피 한 잔의 여유"
        }
        reason은 최소 100자 이상으로 해줘
        """.formatted(
                request.planAnswer(),
                request.energyAnswer(),
                request.moneyAnswer()
        );
    }
}


